version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: ai-calling-agent-app
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      - kafka
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ai_calling_agent
      DB_USER: postgres
      DB_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_BROKERS: kafka:9092
    networks:
      - ai-calling-network

  postgres:
    image: postgres:15-alpine
    container_name: ai-calling-agent-postgres
    environment:
      POSTGRES_DB: ai_calling_agent
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    networks:
      - ai-calling-network
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: ai-calling-agent-redis
    networks:
      - ai-calling-network
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: ai-calling-agent-zookeeper
    networks:
      - ai-calling-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: ai-calling-agent-kafka
    depends_on:
      - zookeeper
    networks:
      - ai-calling-network
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: ai-calling-agent-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - ai-calling-network

volumes:
  postgres_data:
  redis_data:
  kafka_data:

networks:
  ai-calling-network:
    driver: bridge
